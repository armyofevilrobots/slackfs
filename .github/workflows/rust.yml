name: Rust

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_x86_64:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      # pull-requests: write
      # repository-projects: write
    steps:
      #- uses: awalsh128/cache-apt-pkgs-action@latest
      #  with:
      #    packages: libasound2-dev libasound2-data libasound2
      #    version: 1.0
      - name: Checkout including submodules
        uses: actions/checkout@v4
        with:
          submodules: "true"
      #- name: Run tests
      #  run: cargo test --verbose util
      - name: Build
        run: cargo build --release --verbose
      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
      - name: move build
        run: mv ./target/release/slackfs ./
      - name: Zip
        run: zip -r ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip slackfs
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
          asset_content_type: application/zip

  build_arm:
    runs-on: ubuntu-22.04-arm
    permissions:
      contents: write
      # pull-requests: write
      # repository-projects: write
    steps:
      #- uses: awalsh128/cache-apt-pkgs-action@latest
      #  with:
      #    packages: libasound2-dev libasound2-data libasound2
      #    version: 1.0
      - name: Checkout including submodules
        uses: actions/checkout@v4
        with:
          submodules: "true"
      #- name: Run tests
      #  run: cargo test --verbose util
      - name: Build
        run: cargo build --release --verbose
      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
      - name: move build
        run: mv ./target/release/slackfs ./
      - name: Zip
        run: zip -r ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip slackfs
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
          asset_content_type: application/zip

  # build_raspi:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     # pull-requests: write
  #     # repository-projects: write
  #   steps:
  #     #- uses: awalsh128/cache-apt-pkgs-action@latest
  #     #  with:
  #     #    packages: libasound2-dev libasound2-data libasound2
  #     #    version: 1.0
  #     - name: Checkout including submodules
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: "true"
  #     #- name: Run tests
  #     #  run: cargo test --verbose util
  #     - name: Build
  #       uses: pguyot/arm-runner-action@v2
  #       id: build_bin
  #       with:
  #         base_image: raspios_lite:2022-04-04
  #         commands: |
  #           cargo build --release --verbose
  #         copy_artifact_path: target
  #     #- name: Release
  #     #  id: create_release
  #     #  uses: softprops/action-gh-release@v2
  #     #  if: startsWith(github.ref, 'refs/tags/')
  #     - name: move build
  #       run: mv ${{ steps.build_image.outputs.image }}./target/release/slackfs ./
  #     - name: Zip
  #       run: zip -r ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip slackfs
  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
  #         asset_name: ${{ github.event.repository.name }}-${{ github.ref_name}}-${{ runner.os }}-${{ runner.arch }}.zip
  #         asset_content_type: application/zip
